import ip_discovery_common

/* Central controller.
 */

/* LSP-to-IP mappings collected by local agents. */
input relation RealizedAddress(
  lsp: lspid_t,
  timestamp: time_t,
  ip: ipaddr_t)

/* User-supplied LSP configuration. */
input relation LogicalSwitchPort(
  id: lspid_t, // LSP id.
  ls: lsid_t,  // Logical switch this LSP belongs to.
  tofu: bool)  // tofu flag.

/* LSP configuration distributed to local agents
 * (only contains fields relevant to IP discovery). */
output relation LSPConfig(
  lsp: lspid_t, tofu: bool)

LSPConfig(lsp, tofu) :- LogicalSwitchPort(lsp, _, tofu).

/* LSP-to-IP mappings from RealizedAddress with duplicates eliminated. */
output relation EffectiveAddress(lsp: lspid_t, ip: ipaddr_t)

EffectiveAddress(ts_lsp.1, ip) :-
    RealizedAddress(lsp, ts, ip),
    LogicalSwitchPort(.id = lsp, .ls = ls),
    /* Group by logical switch (ls) and ip; pick LSP-to-IP binding
     * with the smallest timestamp from each group. */
    var ts_lsp = Aggregate((ls, ip), group_min((ts, lsp))).
